{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","searchData","addPictureToPage","className","onSubmit","type","placeholder","onChange","ImageGalleryItem","el","largeImageURL","onClick","src","previewURL","alt","ImageGallery","imgArr","map","key","id","Button","addPage","Loader","Modal","picture","closeModal","closeOverlay","createRef","closeWithEscape","e","useEffect","current","focus","window","addEventListener","onKeyPress","ref","target","App","useState","search","setSearch","setImgArr","pageNumber","setPageNumber","loader","setLoader","error","setError","modal","setModal","setPicture","searchPicture","page","a","axios","get","img","data","hits","scrollPage","preventDefault","newPage","scrollTo","top","document","documentElement","scrollHeight","behavior","value","url","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.05dddf8d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst Searchbar = ({ searchData, addPictureToPage }) => {\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={addPictureToPage}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          //   autocomplete=\"off\"\r\n          //   autofocus\r\n          placeholder=\"Search images and photos\"\r\n          onChange={searchData}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n  Searchbar.propTypes = {\r\n    searchData: PropTypes.func,\r\n    addPictureToPage: PropTypes.func,\r\n  }\r\n};\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ImageGalleryItem = ({el, largeImageURL}) => {\r\n  const bigPicture = () => {\r\n    largeImageURL(el.largeImageURL)\r\n  }\r\n\r\n  // console.log(el.largeImageURL);\r\n    return (\r\n<li className=\"ImageGalleryItem\" onClick={bigPicture}>\r\n  <img src={el.previewURL} alt=\"\" className=\"ImageGalleryItem-image\" />\r\n</li>\r\n    );\r\n    ImageGalleryItem.propTypes ={\r\n      el: PropTypes.shape({\r\n        epreviewURL: PropTypes.string,\r\n      }),\r\n      largeImageURL: PropTypes.func,\r\n    }\r\n};\r\n\r\nexport default ImageGalleryItem;","import React from 'react';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ImageGallery = ({imgArr, largeImageURL}) => {\r\n\r\n    return (\r\n<ul className=\"ImageGallery\">\r\n    {imgArr.map(el => <ImageGalleryItem el={el} key={el.id} largeImageURL={largeImageURL}/>)}\r\n\r\n</ul>\r\n    );\r\n    ImageGallery.propTypes = {\r\n        imgArr: PropTypes.array,\r\n        largeImageURL: PropTypes.func,\r\n    }\r\n\r\n};\r\n\r\nexport default ImageGallery;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = ({addPage}) => {\r\n    return (\r\n<button className=\"Button\" onClick={addPage}>Load More</button>\r\n    );\r\n    Button.propTypes = {\r\n        addPage: PropTypes.func,\r\n    }\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Loader.css'\r\n\r\nconst Loader = () => {\r\n    return (\r\n<div className=\"lds-ripple\"><div></div><div></div></div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { createRef, useEffect } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Modal = ({ picture, closeModal }) => {\r\n  const closeOverlay = createRef();\r\n\r\n  const overlayCloser = (e) => {\r\n    if (e.target !== closeOverlay.current) {\r\n      return;\r\n    }\r\n    closeModal();\r\n  };\r\n\r\n  const closeWithEscape = (e) => {\r\n    if (e.key === \"Escape\") {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    closeOverlay.current.focus();\r\n    window.addEventListener(\"keydown\", closeWithEscape);\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className=\"Overlay\"\r\n      onKeyPress={closeWithEscape}\r\n      ref={closeOverlay}\r\n      onClick={overlayCloser}\r\n    >\r\n      <div className=\"Modal\">\r\n        <img src={picture} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n  Modal.propTypes = {\r\n    picture: PropTypes.string, \r\n    closeModal: PropTypes.func,\r\n  }\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button/Button\";\nimport axios from \"axios\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal/Modal\";\n\nfunction App() {\n  const key = \"15591781-785a03c118f12007382b46528\";\n\n  const [search, setSearch] = useState(\"\");\n  const [imgArr, setImgArr] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [picture, setPicture] = useState(\"\");\n\n  const searchPicture = async (page) => {\n    setLoader(true);\n    try {\n      const img = await axios.get(\n        `https://pixabay.com/api/?q=${search}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n      );\n      setImgArr([...imgArr, ...img.data.hits]);\n    } catch (error) {\n      setError(true);\n    } finally {\n      setLoader(false);\n      scrollPage();\n    }\n  };\n\n  const searchData = (e) => {\n    if (e.target.value !== search) {\n      setImgArr([]);\n      setPageNumber(1);\n    }\n    setSearch(e.target.value);\n  };\n\n  const addPage = async (e) => {\n    e.preventDefault();\n    const newPage = pageNumber + 1;\n    setPageNumber(newPage);\n    searchPicture(newPage);\n  };\n\n  const addPictureToPage = (e) => {\n    e.preventDefault();\n    searchPicture();\n  };\n\n  const scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const largeImageURL = (url) => {\n    setPicture(url);\n    setModal(true);\n  };\n\n  const closeModal = (e) => {\n    setModal(false);\n  };\n\n  return (\n    <>\n      <Searchbar searchData={searchData} addPictureToPage={addPictureToPage} />\n      {loader && <Loader />}\n      {error && <p>Loading has problem</p>}\n\n      {!loader && !error && (\n        <ImageGallery imgArr={imgArr} largeImageURL={largeImageURL} />\n      )}\n\n      {imgArr.length > 0 && <Button addPage={addPage} />}\n\n      {modal && <Modal picture={picture} closeModal={closeModal} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}