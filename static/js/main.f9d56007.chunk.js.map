{"version":3,"sources":["Components/Searchbar/Searchbar.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","Components/Button/Button.js","Components/Loader/Loader.js","Components/Modal/Modal.js","App.js","index.js"],"names":["Searchbar","searchData","addPictureToPage","className","onSubmit","id","type","placeholder","onChange","ImageGalleryItem","el","largeImageURL","onClick","src","previewURL","alt","ImageGallery","imgArr","map","key","Button","addPage","Loader","Modal","picture","closeModal","closeOverlay","createRef","closeWithEscape","e","useEffect","current","focus","window","addEventListener","onKeyPress","ref","target","App","useState","search","setSearch","setImgArr","pageNumber","setPageNumber","loader","setLoader","error","setError","modal","setModal","setPicture","searchPicture","page","a","axios","get","img","data","hits","scrollPage","preventDefault","newPage","scrollTo","top","document","documentElement","scrollHeight","behavior","value","getElementById","reset","url","length","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f9d56007.chunk.js","sourcesContent":["import React, { createRef } from \"react\";\nimport PropTypes from \"prop-types\"\n\nconst Searchbar = ({ searchData, addPictureToPage }) => {\n\n\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={addPictureToPage} id=\"request_field\">\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\" \n          \n          type=\"text\"\n          //   autocomplete=\"off\"\n          //   autofocus\n          placeholder=\"Search images and photos\"\n          onChange={searchData}\n        />\n      </form>\n    </header>\n  );\n  Searchbar.propTypes = {\n    searchData: PropTypes.func,\n    addPictureToPage: PropTypes.func,\n  }\n};\n\nexport default Searchbar;\n","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst ImageGalleryItem = ({el, largeImageURL}) => {\n  const bigPicture = () => {\n    largeImageURL(el.largeImageURL)\n  }\n\n  // console.log(el.largeImageURL);\n    return (\n<li className=\"ImageGalleryItem\" onClick={bigPicture}>\n  <img src={el.previewURL} alt=\"\" className=\"ImageGalleryItem-image\" />\n</li>\n    );\n    ImageGalleryItem.propTypes ={\n      el: PropTypes.shape({\n        epreviewURL: PropTypes.string,\n      }),\n      largeImageURL: PropTypes.func,\n    }\n};\n\nexport default ImageGalleryItem;","import React from 'react';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\nimport PropTypes from 'prop-types'\n\nconst ImageGallery = ({imgArr, largeImageURL}) => {\n\n    return (\n<ul className=\"ImageGallery\">\n    {imgArr.map(el => <ImageGalleryItem el={el} key={el.id} largeImageURL={largeImageURL}/>)}\n\n</ul>\n    );\n    ImageGallery.propTypes = {\n        imgArr: PropTypes.array,\n        largeImageURL: PropTypes.func,\n    }\n\n};\n\nexport default ImageGallery;","import React from 'react';\nimport PropTypes from 'prop-types'\n\nconst Button = ({addPage}) => {\n    return (\n<button className=\"Button\" onClick={addPage}>Load More</button>\n    );\n    Button.propTypes = {\n        addPage: PropTypes.func,\n    }\n};\n\nexport default Button;","import React from 'react';\nimport './Loader.css'\n\nconst Loader = () => {\n    return (\n<div className=\"lds-ripple\"><div></div><div></div></div>\n    );\n};\n\nexport default Loader;","import React, { createRef, useEffect } from \"react\";\nimport PropTypes from 'prop-types'\n\nconst Modal = ({ picture, closeModal }) => {\n  const closeOverlay = createRef();\n\n  const overlayCloser = (e) => {\n    if (e.target !== closeOverlay.current) {\n      return;\n    }\n    closeModal();\n  };\n\n  const closeWithEscape = (e) => {\n    if (e.key === \"Escape\") {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    closeOverlay.current.focus();\n    window.addEventListener(\"keydown\", closeWithEscape);\n  });\n\n  return (\n    <div\n      className=\"Overlay\"\n      onKeyPress={closeWithEscape}\n      ref={closeOverlay}\n      onClick={overlayCloser}\n    >\n      <div className=\"Modal\">\n        <img src={picture} alt=\"\" />\n      </div>\n    </div>\n  );\n  Modal.propTypes = {\n    picture: PropTypes.string, \n    closeModal: PropTypes.func,\n  }\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Searchbar from \"./Components/Searchbar/Searchbar\";\nimport ImageGallery from \"./Components/ImageGallery/ImageGallery\";\nimport Button from \"./Components/Button/Button\";\nimport axios from \"axios\";\nimport Loader from \"./Components/Loader/Loader\";\nimport Modal from \"./Components/Modal/Modal\";\n\nfunction App() {\n  const key = \"15591781-785a03c118f12007382b46528\";\n\n  const [search, setSearch] = useState(\"\");\n  const [imgArr, setImgArr] = useState([]);\n  const [pageNumber, setPageNumber] = useState(1);\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [picture, setPicture] = useState(\"\");\n\n  \n\n  const searchPicture = async (page) => {\n    setLoader(true);\n    try {\n      const img = await axios.get(\n        `https://pixabay.com/api/?q=${search}&page=${page}&key=${key}&image_type=photo&orientation=horizontal&per_page=12`\n      );\n      setImgArr([...imgArr, ...img.data.hits]);\n    } catch (error) {\n      setError(true);\n    } finally {\n      setLoader(false);\n      scrollPage();\n      \n    }\n  };\n\n  const searchData = (e) => {\n    if (e.target.value !== search) {\n      setImgArr([]);\n      setPageNumber(1);\n    }\n    setSearch(e.target.value);\n    \n  };\n\n  const addPage = async (e) => {\n    e.preventDefault();\n    const newPage = pageNumber + 1;\n    setPageNumber(newPage);\n    searchPicture(newPage);\n  };\n\n  const addPictureToPage = (e) => {\n    e.preventDefault();\n    searchPicture(pageNumber);\n    e.target.value = \"\"\n    document.getElementById('request_field').reset()    \n  }; \n\n  const scrollPage = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  const largeImageURL = (url) => {\n    setPicture(url);\n    setModal(true);\n  };\n\n  const closeModal = (e) => {\n    setModal(false);\n  };\n\n  \n\n  return (\n    <>\n      <Searchbar searchData={searchData} addPictureToPage={addPictureToPage} />\n      {loader && <Loader />}\n      {error && <p>Loading has problem</p>}\n\n      {!loader && !error && (\n        <ImageGallery imgArr={imgArr} largeImageURL={largeImageURL} />\n      )}\n\n      {imgArr.length > 0 && <Button addPage={addPage} />}\n\n      {modal && <Modal picture={picture} closeModal={closeModal} />}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}